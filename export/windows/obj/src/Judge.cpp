// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_Judge
#include <Judge.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_0e8750889e6e6137_3_boot,"Judge","boot",0x3048a489,"Judge.boot","Judge.hx",3,0x16bfe7a7)
static const Float _hx_array_data_e9491f77_1[] = {
	(Float)100,(Float)400,(Float)600,
};

void Judge_obj::__construct() { }

Dynamic Judge_obj::__CreateEmpty() { return new Judge_obj; }

void *Judge_obj::_hx_vtable = 0;

Dynamic Judge_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Judge_obj > _hx_result = new Judge_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Judge_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x35421cef;
}

::Array< Float > Judge_obj::judge;


Judge_obj::Judge_obj()
{
}

bool Judge_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"judge") ) { outValue = ( judge ); return true; }
	}
	return false;
}

bool Judge_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"judge") ) { judge=ioValue.Cast< ::Array< Float > >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Judge_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo Judge_obj_sStaticStorageInfo[] = {
	{::hx::fsObject /* ::Array< Float > */ ,(void *) &Judge_obj::judge,HX_("judge",97,af,1b,56)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void Judge_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Judge_obj::judge,"judge");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Judge_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Judge_obj::judge,"judge");
};

#endif

::hx::Class Judge_obj::__mClass;

static ::String Judge_obj_sStaticFields[] = {
	HX_("judge",97,af,1b,56),
	::String(null())
};

void Judge_obj::__register()
{
	Judge_obj _hx_dummy;
	Judge_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("Judge",77,1f,49,e9);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Judge_obj::__GetStatic;
	__mClass->mSetStaticField = &Judge_obj::__SetStatic;
	__mClass->mMarkFunc = Judge_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Judge_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< Judge_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Judge_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Judge_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Judge_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Judge_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_0e8750889e6e6137_3_boot)
HXDLIN(   3)		judge = ::Array_obj< Float >::fromData( _hx_array_data_e9491f77_1,3);
            	}
}

